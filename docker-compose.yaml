version: "3"
services:
  db:
    build:
      context: ./db
      args:
        - USER_PASSWORD=${DB_USER_PASSWORD:?db user password must be set}
    networks:
      - internal-network
    volumes:
      - ${DB_FILES_PATH:?db files path must be specified so that you never loose them}:/var/lib/postgresql/data

  server_app:
    build:
      context: ./server-app
      args:
        - BINARY_PATH_APP=/server_binaries/app
        - PSQL_HOSTNAME=db
        - PSQL_PASSWORD=${DB_USER_PASSWORD:?db user password must be set}
        - OSM_PROD_USER=${OSM_PROD_USER:?OSM prod user must be set}
        - OSM_PROD_PASSWORD=${OSM_PROD_PASSWORD:?OSM prod user password must be set}
        - OSM_TESTING_USER=${OSM_TESTING_USER:?OSM testing user must be set}
        - OSM_TESTING_PASSWORD=${OSM_TESTING_PASSWORD:?OSM testing user password must be set}
        - JWT_SECRET=${JWT_SECRET:?JWT secret must be set}
    networks:
      - internal-network
      - external-network
    ports:
      - "127.0.0.1:8080:8080"
    volumes:
      - ${BINARY_PATH_APP:?path to binary must be set}:/server_binaries/app
    depends_on:
      - db
    restart: always
    deploy:
      resources:
        limits:
          memory: 256M

  db_backupper:
    build:
      context: ./db-backupper
      args:
        - BACKUPS_DIR_PATH=/backups
        - BACKUPS_HOUR_MINUTE=${BACKUPS_HOUR_MINUTE:?backups time must be set}
        - PSQL_URL=postgresql://main_user:${DB_USER_PASSWORD}@db/main
    networks:
      - internal-network
    volumes:
      - ${BACKUPS_DIR_PATH:?path to dir for backups files}:/backups
    depends_on:
      - db

networks:
  internal-network:
    driver: bridge
    internal: true
  external-network:
    driver: bridge
